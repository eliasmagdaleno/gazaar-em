<div class="messages-container flex h-screen">
    <div class="senders-section flex-none w-1/4 md:w-1/5 lg:w-1/4 bg-light-orange-500 transition-all duration-500" id="sendersSection">
        <div class="flex justify-between items-center p-4">
            <h2 class="messages-title text-3xl font-bold ml-5 text-shadow-md" id="messagesTitle">Messages</h2>
            <button id="toggleSenders" class="text-md shadow-md font-semibold bg-light-gray-500 border border-dark-gray-500 rounded px-2 py-1 cursor-pointer">
                <span id="toggleSendersIcon">
                    <img src="/frontend/Assets/icons/feather-light-black/chevron-left.svg" alt="Toggle Icon" />
                </span>
            </button>
        </div>
        <div id="sendersContent" class="senders-list flex flex-col mt-2 gap-0.5">
            {{> sendercard name="Alice" lastMessage="Hey, how are you?" timestamp="10:30 AM"}}
            {{> sendercard name="Bob" lastMessage="Can you send me the details?" timestamp="11:15 AM"}}
            {{> sendercard name="Charlie" lastMessage="Thanks for the update!" timestamp="12:45 PM"}}
            {{> sendercard name="Diana" lastMessage="Let me know when you're free." timestamp="1:30 PM"}}
            {{> sendercard name="Eve" lastMessage="Looking forward to our meeting." timestamp="2:00 PM"}}
            {{> sendercard name="Frank" lastMessage="I'll get back to you soon." timestamp="3:15 PM"}}
        </div>
    </div>

    <div id="chatSection" class="flex-grow bg-light-gray-500 flex flex-col justify-between h-screen">
        <div class="message-header flex flex-row justify-between bg-dark-gray-500 p-2">
            <div class="sender-info flex flex-row gap-2">
                <img class="sender-pfp h-16 w-16 rounded-full" src="/frontend/Assets/icons/feather-light-black/user.svg" />
                <div class="sender-details flex flex-col">
                    <p class="sender-name font-bold text-lg sender-name-display">{{name}}</p>
                </div>
            </div>
        </div>
        <div class="message-section flex flex-col gap-4 mt-4 overflow-y-auto pr-2 h-full" style="max-height: calc(100vh - 200px);">
            {{#each messages}}
                {{#if isSender}}
                    {{> sendermessage message=this.message timestamp=this.timestamp }}
                {{else}}
                    {{> recipientmessage message=this.message timestamp=this.timestamp }}
                {{/if}}
            {{/each}}
        </div>
        <div class="message-form mt-4 text-light-black-500 pt-4 pb-6 self-center">
            <form action="/send-message" method="POST" class="message-input flex items-center w-xl bg-light-gray-500 border border-light-black-500 rounded-md">
                <textarea class="flex-grow p-2 text-light-black-500 resize-none"  rows="1" placeholder="Type your message here...">
                </textarea>
                <button type="submit" class="send-button text-light-gray-500 rounded-full cursor-pointer mr-1">
                    <img class="send-icon overflow-hidden" src="/frontend/Assets/icons/feather-blood-orange/send.svg" alt="Send" />
                </button>
            </form>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const sendersSection = document.querySelector('.senders-section');
            const toggleSendersIcon = document.getElementById('toggleSendersIcon').querySelector('img');
            const sendersContent = document.getElementById('sendersContent');
            const toggleSendersButton = document.getElementById('toggleSenders');
            const chatSection = document.getElementById('chatSection');
            const senderCards = document.querySelectorAll('.sender-card');
            const senderNameElement = document.querySelector('.sender-name-display');
            let isCollapsed = false;

            toggleSendersButton.addEventListener('click', () => {
                isCollapsed = !isCollapsed;
                if (isCollapsed) {
                    sendersSection.style.width = '75px';
                    messagesTitle.classList.add('hidden');
                    toggleSendersIcon.src = '/frontend/Assets/icons/feather-light-black/chevron-right.svg';
                    sendersContent.style.display = 'none';
                    chatSection.style.flexGrow = '1';
                } else {
                    sendersSection.style.width = '25%';
                    messagesTitle.classList.remove('hidden');
                    toggleSendersIcon.src = '/frontend/Assets/icons/feather-light-black/chevron-left.svg';
                    sendersContent.style.display = 'flex';
                    chatSection.style.flexGrow = '1';
                }
            });

            senderCards.forEach(card => {
                card.addEventListener('click', () => {
                    const senderName = card.querySelector('.sender-name').textContent;
                    senderNameElement.textContent = senderName;
                });
            });
        });
    </script>
</div>